"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[935],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>p});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=s(n),p=o,f=d["".concat(c,".").concat(p)]||d[p]||u[p]||a;return n?r.createElement(f,i(i({ref:t},m),{},{components:n})):r.createElement(f,i({ref:t},m))}));function p(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2041:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const a={},i="Deployment",l={unversionedId:"documentation/human-detection-module/deployment",id:"documentation/human-detection-module/deployment",title:"Deployment",description:"We used Docker to deploy the Human Detection Module (HDM), the docker-compose file is as follows:",source:"@site/docs/documentation/human-detection-module/deployment.md",sourceDirName:"documentation/human-detection-module",slug:"/documentation/human-detection-module/deployment",permalink:"/es-project/documentation/human-detection-module/deployment",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/documentation/human-detection-module/deployment.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Human Detection Module",permalink:"/es-project/category/human-detection-module"},next:{title:"Definitions about User Stories",permalink:"/es-project/category/definitions-about-user-stories"}},c={},s=[],m={toc:s};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"deployment"},"Deployment"),(0,o.kt)("p",null,"We used ",(0,o.kt)("a",{parentName:"p",href:"https://www.docker.com/"},"Docker")," to deploy the Human Detection Module (HDM), the docker-compose file is as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'version: "3.8"\nservices:\n    rabbitmq3:\n        container_name: "rabbitmq"\n        image: rabbitmq:3.8-management-alpine\n        environment:\n            - RABBITMQ_DEFAULT_USER=myuser\n            - RABBITMQ_DEFAULT_PASS=mypassword\n        ports:\n            # AMQP protocol port\n            - \'5672:5672\'\n            # HTTP management UI\n            - \'15672:15672\'\n\n    redis:\n        container_name: "redis_db"\n        image: redis:6.2-alpine\n        restart: always\n        ports:\n        - \'6379:6379\'\n        command: redis-server --save 20 1 --loglevel warning\n        volumes: \n        - redis:/data\n    \n    camera:\n        build:\n            context: camera\n            dockerfile: Dockerfile\n        restart: on-failure\n\n        # environment variable\n        environment:\n            AMQP_URL: "rabbitmq3"\n\n        depends_on:\n            - rabbitmq3\n  \n    human-detection-module:\n        build:\n            context: human-detection-module\n            dockerfile: Dockerfile\n        restart: on-failure\n\n        # environment variable\n        environment:\n            AMQP_URL: "rabbitmq3"\n\n        depends_on:\n            - rabbitmq3\n            - redis\n\nvolumes:\n    redis:\n        driver: local\n')),(0,o.kt)("p",null,"We can see that we have both the ",(0,o.kt)("a",{parentName:"p",href:"https://www.rabbitmq.com/"},"RabbitMQ")," and the ",(0,o.kt)("a",{parentName:"p",href:"https://redis.io/"},"Redis")," services, as well as both the cameras and the human detection modules. Each modules image is described by a Dockerfile."),(0,o.kt)("p",null,"Cameras Dockerfile:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dockerfile"},'FROM python:3.9\nCOPY . /code/\nWORKDIR /code/\nRUN pip3 install -r requirements.txt\nRUN apt-get update\nRUN apt-get install ffmpeg libsm6 libxext6  -y\nCMD ["python3", "main.py"]\n')),(0,o.kt)("p",null,"Human Detection Modules Dockerfile:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dockerfile"},'FROM python:3.9\nCOPY . /code/\nWORKDIR /code/\nRUN pip3 install -r requirements.txt\nRUN apt-get update\nRUN apt-get install ffmpeg libsm6 libxext6  -y\nCMD ["python3","-u", "main.py"]\n')),(0,o.kt)("p",null,"Both Dockerfiles installs the need requirements for each module, then runs the modules script."),(0,o.kt)("p",null,"In the HDM, and regarding the Advanced Message Queuing Protocol (AMQP), the cameras act as producers, and the human detection module (and its instances) act as consumers."))}u.isMDXComponent=!0}}]);