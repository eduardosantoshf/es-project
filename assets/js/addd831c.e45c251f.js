"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8263],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>p});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(n),p=a,f=d["".concat(s,".").concat(p)]||d[p]||m[p]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6231:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:2},o="Testing",c={unversionedId:"documentation/management-web-ui/testing",id:"documentation/management-web-ui/testing",title:"Testing",description:"The Management Web UI was tested using the Jest framework to run the tests.",source:"@site/docs/documentation/management-web-ui/testing.md",sourceDirName:"documentation/management-web-ui",slug:"/documentation/management-web-ui/testing",permalink:"/es-project/documentation/management-web-ui/testing",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/documentation/management-web-ui/testing.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Front-end",permalink:"/es-project/documentation/management-web-ui/"},next:{title:"Deployment",permalink:"/es-project/documentation/management-web-ui/deployment"}},s={},l=[],u={toc:l};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"testing"},"Testing"),(0,a.kt)("p",null,"The Management Web UI was tested using the ",(0,a.kt)("a",{parentName:"p",href:"https://jestjs.io/"},"Jest")," framework to run the tests."),(0,a.kt)("p",null,"As the Management Web UI is a React application, we decided to use Selinium to make functional tests. The tests were made using the ",(0,a.kt)("a",{parentName:"p",href:"https://www.selenium.dev/selenium-ide/"},"Selenium IDE")," plugin for the ",(0,a.kt)("a",{parentName:"p",href:"https://www.mozilla.org/en-US/firefox/new/"},"Firefox")," browser."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'// Generated by Selenium IDE\nconst { Builder, By, Key, until } = require(\'selenium-webdriver\')\nconst assert = require(\'assert\')\n\ndescribe(\'test_1\', function() {\n  let driver\n  let vars\n  beforeEach(async function() {\n    driver = await new Builder().forBrowser(\'firefox\').build()\n    vars = {}\n  })\n  afterEach(async function() {\n    await driver.quit();\n  })\n  it(\'test_1\', async function() {\n    await driver.get("http://localhost:3000/")\n    await driver.manage().window().setRect({ width: 1800, height: 1125 })\n    await driver.findElement(By.id("react-burger-menu-btn")).click()\n    await driver.findElement(By.linkText("List Cameras")).click()\n    await driver.findElement(By.css(".bm-overlay")).click()\n    await driver.findElement(By.id("react-burger-menu-btn")).click()\n    await driver.findElement(By.linkText("Camera Nodes")).click()\n    await driver.findElement(By.css(".bm-overlay")).click()\n    await driver.findElement(By.id("react-burger-menu-btn")).click()\n    await driver.findElement(By.linkText("Dashboard")).click()\n    await driver.findElement(By.css(".bm-overlay")).click()\n    await driver.findElement(By.id("react-burger-menu-btn")).click()\n    await driver.findElement(By.linkText("Users")).click()\n    await driver.executeScript("window.scrollTo(0,0)")\n    await driver.findElement(By.css(".bm-overlay")).click()\n  })\n})\n')),(0,a.kt)("p",null,"To run the test the application have to be running, and the run the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"yarn run jest\n")))}m.isMDXComponent=!0}}]);